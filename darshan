import cv2
import numpy as np
import matplotlib.pyplot as plt

def cartoonize_image(image_path):
    # Load the image
    img = cv2.imread(image_path)
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    
    # Convert to grayscale
    gray = cv2.cvtColor(img_rgb, cv2.COLOR_RGB2GRAY)
    
    # Apply median blur
    gray_blur = cv2.medianBlur(gray, 5)
    
    # Detect edges using Canny
    edges = cv2.Canny(gray_blur, 100, 200)
    
    # Dilate the edges
    edges_dilated = cv2.dilate(edges, kernel=np.ones((1,1),np.uint8))
    
    # Create a mask
    edges_mask = cv2.bitwise_not(edges_dilated)
    
    # Convert to color
    edges_mask_colored = cv2.cvtColor(edges_mask, cv2.COLOR_GRAY2RGB)
    
    # Perform color quantization
    data = np.float32(img_rgb).reshape((-1, 3))
    k = 9  # Number of colors
    _, labels, centers = cv2.kmeans(data, k, None, 
                                    (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.2), 
                                    10, cv2.KMEANS_RANDOM_CENTERS)
    centers = np.uint8(centers)
    quantized_img = centers[labels.flatten()]
    quantized_img = quantized_img.reshape(img_rgb.shape)
    
    # Combine edges and quantized colors
    cartoon = cv2.bitwise_and(quantized_img, edges_mask_colored)
    
    # Display the result
    plt.figure(figsize=(10,10))
    plt.imshow(cartoon)
    plt.axis('off')
    plt.show()

# Example usage
cartoonize_image(r'C:\Users\Chandra\Desktop\coding\dv.webp')
